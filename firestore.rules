rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 用戶文檔規則
    match /user/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // 任務文檔規則
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == resource.data.userId;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        // 允許應徵者更新applicants欄位
        (request.auth.uid != resource.data.userId && 
         onlyUpdatingFields(['applicants', 'updatedAt']))
      );
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // 聊天室文檔規則
    match /chats/{chatId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.visibleTo;
      allow write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
    }
    
    // 聊天室消息子集合規則
    match /chats/{chatId}/messages/{messageId} {
      allow read: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.visibleTo;
      allow create: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants &&
        request.auth.uid == request.resource.data.senderId;
    }
    
    // 系統地點規則（只讀）
    match /systemLocations/{locationId} {
      allow read: if request.auth != null;
    }
    
    // 輔助函數
    function onlyUpdatingFields(fields) {
      return request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(fields);
    }
  }
} 